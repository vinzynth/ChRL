# -----------------------------------------------------------------------=[ javax.persistence.provider ]
# Description:
# No Description available
# 
# Default Value: org.hibernate.ejb.HibernatePersistence
javax.persistence.provider=org.hibernate.ejb.HibernatePersistence

# ----------------------------------------------------------------=[ javax.persistence.transactionType ]
# Description:
# No Description available
# 
# Default Value: 
javax.persistence.transactionType=

# ------------------------------------------------------------------=[ javax.persistence.jtaDataSource ]
# Description:
# No Description available
# 
# Default Value: 
javax.persistence.jtaDataSource=

# ---------------------------------------------------------------=[ javax.persistence.nonJtaDataSource ]
# Description:
# No Description available
# 
# Default Value: 
javax.persistence.nonJtaDataSource=

# --------------------------------------------------------------------=[ javax.persistence.jdbc.driver ]
# Description:
# No Description available
# 
# Default Value: org.h2.Driver
javax.persistence.jdbc.driver=org.mariadb.jdbc.Driver

# -----------------------------------------------------------------------=[ javax.persistence.jdbc.url ]
# Description:
# No Description available
# 
# Default Value: jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE
javax.persistence.jdbc.url=jdbc:mariadb://localhost:3307/test

# ----------------------------------------------------------------------=[ javax.persistence.jdbc.user ]
# Description:
# No Description available
# 
# Default Value: sa
javax.persistence.jdbc.user=root

# ------------------------------------------------------------------=[ javax.persistence.jdbc.password ]
# Description:
# No Description available
# 
# Default Value: 
javax.persistence.jdbc.password=toor

# ---------------------------------------------------------------=[ javax.persistence.sharedCache.mode ]
# Description:
# No Description available
# 
# Default Value: 
javax.persistence.sharedCache.mode=

# -------------------------------------------------------------=[ javax.persistence.cache.retrieveMode ]
# Description:
# No Description available
# 
# Default Value: 
javax.persistence.cache.retrieveMode=

# ----------------------------------------------------------------=[ javax.persistence.cache.storeMode ]
# Description:
# No Description available
# 
# Default Value: 
javax.persistence.cache.storeMode=

# ----------------------------------------------------------------=[ javax.persistence.validation.mode ]
# Description:
# No Description available
# 
# Default Value: 
javax.persistence.validation.mode=

# -------------------------------------------------------------=[ javax.persistence.validation.factory ]
# Description:
# No Description available
# 
# Default Value: 
javax.persistence.validation.factory=

# ---------------------------------------------------------------------=[ javax.persistence.lock.scope ]
# Description:
# No Description available
# 
# Default Value: 
javax.persistence.lock.scope=

# -------------------------------------------------------------------=[ javax.persistence.lock.timeout ]
# Description:
# No Description available
# 
# Default Value: 
javax.persistence.lock.timeout=

# ---------------------------------------------------=[ javax.persistence.validation.group.pre-persist ]
# Description:
# No Description available
# 
# Default Value: 
javax.persistence.validation.group.pre-persist=

# ----------------------------------------------------=[ javax.persistence.validation.group.pre-update ]
# Description:
# No Description available
# 
# Default Value: 
javax.persistence.validation.group.pre-update=

# ----------------------------------------------------=[ javax.persistence.validation.group.pre-remove ]
# Description:
# No Description available
# 
# Default Value: 
javax.persistence.validation.group.pre-remove=

# -------------------------------------------------------------------=[ javax.persistence.bean.manager ]
# Description:
# No Description available
# 
# Default Value: 
javax.persistence.bean.manager=

# ------------------------------------------------=[ javax.persistence.schema-generation.create-source ]
# Description:
# No Description available
# 
# Default Value: 
javax.persistence.schema-generation.create-source=

# --------------------------------------------------=[ javax.persistence.schema-generation.drop-source ]
# Description:
# No Description available
# 
# Default Value: 
javax.persistence.schema-generation.drop-source=

# -----------------------------------------=[ javax.persistence.schema-generation.create-script-source ]
# Description:
# No Description available
# 
# Default Value: 
javax.persistence.schema-generation.create-script-source=

# -------------------------------------------=[ javax.persistence.schema-generation.drop-script-source ]
# Description:
# No Description available
# 
# Default Value: 
javax.persistence.schema-generation.drop-script-source=

# ----------------------------------------------=[ javax.persistence.schema-generation.database.action ]
# Description:
# No Description available
# 
# Default Value: 
javax.persistence.schema-generation.database.action=

# -----------------------------------------------=[ javax.persistence.schema-generation.scripts.action ]
# Description:
# No Description available
# 
# Default Value: 
javax.persistence.schema-generation.scripts.action=

# ----------------------------------------=[ javax.persistence.schema-generation.scripts.create-target ]
# Description:
# No Description available
# 
# Default Value: 
javax.persistence.schema-generation.scripts.create-target=

# ------------------------------------------=[ javax.persistence.schema-generation.scripts.drop-target ]
# Description:
# No Description available
# 
# Default Value: 
javax.persistence.schema-generation.scripts.drop-target=

# --------------------------------------------------------=[ javax.persistence.create-database-schemas ]
# Description:
# No Description available
# 
# Default Value: 
javax.persistence.create-database-schemas=

# ---------------------------------------------------=[ javax.persistence.schema-generation-connection ]
# Description:
# No Description available
# 
# Default Value: 
javax.persistence.schema-generation-connection=

# ----------------------------------------------------------=[ javax.persistence.database-product-name ]
# Description:
# No Description available
# 
# Default Value: 
javax.persistence.database-product-name=

# ---------------------------------------------------------=[ javax.persistence.database-major-version ]
# Description:
# No Description available
# 
# Default Value: 
javax.persistence.database-major-version=

# ---------------------------------------------------------=[ javax.persistence.database-minor-version ]
# Description:
# No Description available
# 
# Default Value: 
javax.persistence.database-minor-version=

# ---------------------------------------------------------=[ javax.persistence.sql-load-script-source ]
# Description:
# No Description available
# 
# Default Value: 
javax.persistence.sql-load-script-source=

# ---------------------------------------------------------------------------=[ org.hibernate.lockMode ]
# Description:
# No Description available
# 
# Default Value: 
org.hibernate.lockMode=

# ----------------------------------------------------------------------------=[ hibernate.ejb.cfgfile ]
# Description:
# No Description available
# 
# Default Value: 
hibernate.ejb.cfgfile=

# -------------------------------------------------------------------------=[ hibernate.ejb.classcache ]
# Description:
# No Description available
# 
# Default Value: 
hibernate.ejb.classcache=

# --------------------------------------------------------------------=[ hibernate.ejb.collectioncache ]
# Description:
# No Description available
# 
# Default Value: 
hibernate.ejb.collectioncache=

# ------------------------------------------------------------------------=[ hibernate.ejb.interceptor ]
# Description:
# No Description available
# 
# Default Value: 
hibernate.ejb.interceptor=

# ---------------------------------------------------------=[ hibernate.ejb.interceptor.session_scoped ]
# Description:
# No Description available
# 
# Default Value: 
hibernate.ejb.interceptor.session_scoped=

# -----------------------------------------------------------=[ hibernate.ejb.session_factory_observer ]
# Description:
# No Description available
# 
# Default Value: 
hibernate.ejb.session_factory_observer=

# ------------------------------------------------------------------------------=[ hibernate.ejb.event ]
# Description:
# No Description available
# 
# Default Value: 
hibernate.ejb.event=

# -----------------------------------------------------------------=[ hibernate.ejb.use_class_enhancer ]
# Description:
# No Description available
# 
# Default Value: 
hibernate.ejb.use_class_enhancer=

# ----------------------------------------------------------------=[ hibernate.ejb.discard_pc_on_close ]
# Description:
# No Description available
# 
# Default Value: 
hibernate.ejb.discard_pc_on_close=

# --------------------------------------------------------------------------=[ org.hibernate.flushMode ]
# Description:
# No Description available
# 
# Default Value: 
org.hibernate.flushMode=

# ---------------------------------------------------------=[ hibernate.ejb.entitymanager_factory_name ]
# Description:
# No Description available
# 
# Default Value: 
hibernate.ejb.entitymanager_factory_name=

# ---------------------------------------------------------------=[ hibernate.ejb.metamodel.population ]
# Description:
# No Description available
# 
# Default Value: 
hibernate.ejb.metamodel.population=

# --------------------------------------------------------------------------=[ hibernate.ejb.xml_files ]
# Description:
# No Description available
# 
# Default Value: 
hibernate.ejb.xml_files=

# ---------------------------------------------------------------------------=[ hibernate.hbmxml.files ]
# Description:
# No Description available
# 
# Default Value: 
hibernate.hbmxml.files=

# ----------------------------------------------------------------=[ hibernate.ejb.persistenceUnitName ]
# Description:
# No Description available
# 
# Default Value: default
hibernate.ejb.persistenceUnitName=mariadb

# -------------------------------------------------------------=[ com.bravestone.hibernate.logQuerries ]
# Description:
# No Description available
# 
# Default Value: false
com.bravestone.hibernate.logQuerries=false

# -------------------------------------------------------------------=[ hibernate.session_factory_name ]
# Description:
#  Defines a name for the {@link org.hibernate.SessionFactory}. Usefu
# l both to<ul> <li>allow serialization and deserialization to work a
# cross different jvms</li> <li>optionally allow the SessionFactory t
# o be bound into JNDI</li> </ul> @see #SESSION_FACTORY_NAME_IS_JNDI 
# / 
# 
# Default Value: 
hibernate.session_factory_name=

# -----------------------------------------------------------=[ hibernate.session_factory_name_is_jndi ]
# Description:
# Does the value defined by {@link #SESSION_FACTORY_NAME} rep
# resent a {@literal JNDI} namespace into which the {@link or
# g.hibernate.SessionFactory} should be bound? / 
# 
# Default Value: 
hibernate.session_factory_name_is_jndi=

# --------------------------------------------------------------=[ hibernate.connection.provider_class ]
# Description:
# Names the {@link org.hibernate.engine.jdbc.connections.spi.Con
# nectionProvider} to use for obtaining JDBC connections. Can ei
# ther reference an instance of {@link org.hibernate.engine.jdbc
# .connections.spi.ConnectionProvider} or a {@link Class} or {@l
# ink String} reference to the {@link org.hibernate.engine.jdbc.
# connections.spi.ConnectionProvider} implementation class. / 
# 
# Default Value: com.zaxxer.hikari.hibernate.HikariConnectionProvider
hibernate.connection.provider_class=com.zaxxer.hikari.hibernate.HikariConnectionProvider

# ----------------------------------------------------------------=[ hibernate.connection.driver_class ]
# Description:
# Names the {@literal JDBC} driver class / 
# 
# Default Value: 
hibernate.connection.driver_class=

# -------------------------------------------------------------------------=[ hibernate.connection.url ]
# Description:
# Names the {@literal JDBC} connection url. / 
# 
# Default Value: 
hibernate.connection.url=

# --------------------------------------------------------------------=[ hibernate.connection.username ]
# Description:
# Names the connection user. This might mean one of 2 things in out-of
# -the-box Hibernate {@link org.hibernate.engine.jdbc.connections.spi.
# ConnectionProvider}: <ul> <li>The username used to pass along to cre
# ating the JDBC connection</li> <li>The username used to obtain a JDB
# C connection from a data source</li> </ul> / 
# 
# Default Value: 
hibernate.connection.username=

# --------------------------------------------------------------------=[ hibernate.connection.password ]
# Description:
# Names the connection password. See usage discussion on {@link #USER}
#  / 
# 
# Default Value: 
hibernate.connection.password=

# -------------------------------------------------------------------=[ hibernate.connection.isolation ]
# Description:
# Names the {@literal JDBC} transaction isolation level / 
# 
# Default Value: 
hibernate.connection.isolation=

# ------------------------------------------------------------------=[ hibernate.connection.autocommit ]
# Description:
# Names the {@literal JDBC} autocommit mode / 
# 
# Default Value: 
hibernate.connection.autocommit=

# -------------------------------------------------------------------=[ hibernate.connection.pool_size ]
# Description:
# Maximum number of inactive connections for the built-in Hibernate c
# onnection pool. / 
# 
# Default Value: 
hibernate.connection.pool_size=

# ------------------------------------------------------------------=[ hibernate.connection.datasource ]
# Description:
# Names a {@link javax.sql.DataSource}. Can either reference a {@lin
# k javax.sql.DataSource} instance or a {@literal JNDI} name under w
# hich to locate the {@link javax.sql.DataSource}. / 
# 
# Default Value: 
hibernate.connection.datasource=

# -----------------------------------------------------------------------------=[ hibernate.connection ]
# Description:
# Names a prefix used to define arbitrary JDBC connection properties. These pro
# perties are passed along to the {@literal JDBC} provider when creating a conn
# ection. / 
# 
# Default Value: 
hibernate.connection=

# -----------------------------------------------------------------------------=[ hibernate.jndi.class ]
# Description:
# Names the {@literal JNDI} {@link javax.naming.InitialContext} class. @see jav
# ax.naming.Context#INITIAL_CONTEXT_FACTORY / 
# 
# Default Value: 
hibernate.jndi.class=

# -------------------------------------------------------------------------------=[ hibernate.jndi.url ]
# Description:
# Names the {@literal JNDI} provider/connection url @see javax.naming.Context#PRO
# VIDER_URL / 
# 
# Default Value: 
hibernate.jndi.url=

# -----------------------------------------------------------------------------------=[ hibernate.jndi ]
# Description:
# Names a prefix used to define arbitrary {@literal JNDI} {@link javax.naming.Initial
# Context} properties. These properties are passed along to {@link javax.naming.Initi
# alContext#InitialContext(java.util.Hashtable)} / 
# 
# Default Value: 
hibernate.jndi=

# --------------------------------------------------------------------------------=[ hibernate.dialect ]
# Description:
# Names the Hibernate {@literal SQL} {@link org.hibernate.dialect.Dialect} class /
#  
# 
# Default Value: 
hibernate.dialect=

# ----------------------------------------------------------------------=[ hibernate.dialect_resolvers ]
# Description:
# Names any additional {@link org.hibernate.engine.jdbc.dialect.spi.Dial
# ectResolver} implementations to register with the standard {@link org.
# hibernate.engine.jdbc.dialect.spi.DialectFactory}. / 
# 
# Default Value: 
hibernate.dialect_resolvers=

# -------------------------------------------------------------------------=[ hibernate.default_schema ]
# Description:
# A default database schema (owner) name to use for unqualified tablenames 
# / 
# 
# Default Value: 
hibernate.default_schema=

# ------------------------------------------------------------------------=[ hibernate.default_catalog ]
# Description:
# A default database catalog name to use for unqualified tablenames / 
# 
# Default Value: 
hibernate.default_catalog=

# -------------------------------------------------------------------------------=[ hibernate.show_sql ]
# Description:
# Enable logging of generated SQL to the console / 
# 
# Default Value: true
hibernate.show_sql=true

# -----------------------------------------------------------------------------=[ hibernate.format_sql ]
# Description:
# Enable formatting of SQL logged to the console / 
# 
# Default Value: 
hibernate.format_sql=

# -----------------------------------------------------------------------=[ hibernate.use_sql_comments ]
# Description:
# Add comments to the generated SQL / 
# 
# Default Value: 
hibernate.use_sql_comments=

# ------------------------------------------------------------------------=[ hibernate.max_fetch_depth ]
# Description:
# Maximum depth of outer join fetching / 
# 
# Default Value: 
hibernate.max_fetch_depth=

# ---------------------------------------------------------------=[ hibernate.default_batch_fetch_size ]
# Description:
# The default batch size for batch fetching / 
# 
# Default Value: 500
hibernate.default_batch_fetch_size=500

# ------------------------------------------------------------=[ hibernate.jdbc.use_streams_for_binary ]
# Description:
# Use <tt>java.io</tt> streams to read / write binary data fro
# m / to JDBC / 
# 
# Default Value: 
hibernate.jdbc.use_streams_for_binary=

# ----------------------------------------------------------=[ hibernate.jdbc.use_scrollable_resultset ]
# Description:
# Use JDBC scrollable <tt>ResultSet</tt>s. This property is 
# only necessary when there is no <tt>ConnectionProvider</tt
# >, ie. the user is supplying JDBC connections. / 
# 
# Default Value: 
hibernate.jdbc.use_scrollable_resultset=

# ------------------------------------------------------------=[ hibernate.jdbc.use_get_generated_keys ]
# Description:
# Tells the JDBC driver to attempt to retrieve row Id with the
#  JDBC 3.0 PreparedStatement.getGeneratedKeys() method. In ge
# neral, performance will be better if this property is set to
#  true and the underlying JDBC driver supports getGeneratedKe
# ys(). / 
# 
# Default Value: 
hibernate.jdbc.use_get_generated_keys=

# ------------------------------------------------------------------------=[ hibernate.jdbc.fetch_size ]
# Description:
# Gives the JDBC driver a hint as to the number of rows that should be fet
# ched from the database when more rows are needed. If <tt>0</tt>, JDBC dr
# iver default settings will be used. / 
# 
# Default Value: 20
hibernate.jdbc.fetch_size=20

# ------------------------------------------------------------------------=[ hibernate.jdbc.batch_size ]
# Description:
# Maximum JDBC batch size. A nonzero value enables batch updates. / 
# 
# Default Value: 20
hibernate.jdbc.batch_size=20

# ---------------------------------------------------------------------=[ hibernate.jdbc.factory_class ]
# Description:
# Select a custom batcher. / 
# 
# Default Value: 
hibernate.jdbc.factory_class=

# --------------------------------------------------------------=[ hibernate.jdbc.batch_versioned_data ]
# Description:
# Should versioned data be included in batching? / 
# 
# Default Value: 
hibernate.jdbc.batch_versioned_data=

# --------------------------------------------------------------------------=[ hibernate.c3p0.max_size ]
# Description:
# Maximum size of C3P0 connection pool / 
# 
# Default Value: 5
hibernate.c3p0.max_size=5

# --------------------------------------------------------------------------=[ hibernate.c3p0.min_size ]
# Description:
# Minimum size of C3P0 connection pool / 
# 
# Default Value: 2
hibernate.c3p0.min_size=2

# ---------------------------------------------------------------------------=[ hibernate.c3p0.timeout ]
# Description:
# Maximum idle time for C3P0 connection pool / 
# 
# Default Value: 180
hibernate.c3p0.timeout=180

# --------------------------------------------------------------------=[ hibernate.c3p0.max_statements ]
# Description:
# Maximum size of C3P0 statement cache / 
# 
# Default Value: 50
hibernate.c3p0.max_statements=50

# -----------------------------------------------------------------=[ hibernate.c3p0.acquire_increment ]
# Description:
# Number of connections acquired when pool is exhausted / 
# 
# Default Value: 
hibernate.c3p0.acquire_increment=

# ------------------------------------------------------------------=[ hibernate.c3p0.idle_test_period ]
# Description:
# Idle time before a C3P0 pooled connection is validated / 
# 
# Default Value: 150
hibernate.c3p0.idle_test_period=150

# ----------------------------------------------------------------------------=[ hibernate.proxool.xml ]
# Description:
# Proxool property to configure the Proxool Provider using an XML (<tt>/path/t
# o/file.xml</tt>) / 
# 
# Default Value: 
hibernate.proxool.xml=

# ---------------------------------------------------------------------=[ hibernate.proxool.properties ]
# Description:
# Proxool property to configure the Proxool Provider using a properties
#  file (<tt>/path/to/proxool.properties</tt>) / 
# 
# Default Value: 
hibernate.proxool.properties=

# ------------------------------------------------------------------=[ hibernate.proxool.existing_pool ]
# Description:
# Proxool property to configure the Proxool Provider from an already
#  existing pool (<tt>true</tt> / <tt>false</tt>) / 
# 
# Default Value: 
hibernate.proxool.existing_pool=

# ---------------------------------------------------------------------=[ hibernate.proxool.pool_alias ]
# Description:
# Proxool property with the Proxool pool alias to use (Required for <tt
# >PROXOOL_EXISTING_POOL</tt>, <tt>PROXOOL_PROPERTIES</tt>, or <tt>PROX
# OOL_XML</tt>) / 
# 
# Default Value: 
hibernate.proxool.pool_alias=

# ---------------------------------------------------------=[ hibernate.transaction.auto_close_session ]
# Description:
# Enable automatic session close at end of transaction / 
# 
# Default Value: 
hibernate.transaction.auto_close_session=

# ----------------------------------------------------=[ hibernate.transaction.flush_before_completion ]
# Description:
# Enable automatic flush during the JTA <tt>beforeComp
# letion()</tt> callback / 
# 
# Default Value: 
hibernate.transaction.flush_before_completion=

# ----------------------------------------------------------------=[ hibernate.connection.release_mode ]
# Description:
# Specifies how Hibernate should release JDBC connections. / 
# 
# Default Value: 
hibernate.connection.release_mode=

# ----------------------------------------------------------=[ hibernate.current_session_context_class ]
# Description:
# Context scoping impl for {@link org.hibernate.SessionFacto
# ry#getCurrentSession()} processing. / 
# 
# Default Value: 
hibernate.current_session_context_class=

# ---------------------------------------------------------------=[ hibernate.transaction.jta.platform ]
# Description:
# Names the {@link org.hibernate.engine.transaction.jta.platform.
# spi.JtaPlatform} implementation to use for integrating with {@l
# iteral JTA} systems. Can reference either a {@link org.hibernat
# e.engine.transaction.jta.platform.spi.JtaPlatform} instance or 
# the name of the {@link org.hibernate.engine.transaction.jta.pla
# tform.spi.JtaPlatform} implementation class @since 4.0 / 
# 
# Default Value: 
hibernate.transaction.jta.platform=

# ------------------------------------------------------=[ hibernate.transaction.jta.platform_resolver ]
# Description:
# Names the {@link org.hibernate.engine.transaction.jta.
# platform.spi.JtaPlatformResolver} implementation to us
# e. @since 4.3 / 
# 
# Default Value: 
hibernate.transaction.jta.platform_resolver=

# -------------------------------------------------------------=[ hibernate.cache.region.factory_class ]
# Description:
# The {@link org.hibernate.cache.spi.RegionFactory} implementat
# ion class / 
# 
# Default Value: org.hibernate.cache.infinispan.InfinispanRegionFactory
hibernate.cache.region.factory_class=org.hibernate.cache.infinispan.InfinispanRegionFactory

# ----------------------------------------=[ hibernate.cache.provider_configuration_file_resource_path ]
# Description:
# The <tt>CacheProvider</tt> implementatio
# n class / 
# 
# Default Value: 
hibernate.cache.provider_configuration_file_resource_path=

# ------------------------------------------------------------------=[ hibernate.cache.use_query_cache ]
# Description:
# Enable the query cache (disabled by default) / 
# 
# Default Value: true
hibernate.cache.use_query_cache=true

# --------------------------------------------------------------=[ hibernate.cache.query_cache_factory ]
# Description:
# The <tt>QueryCacheFactory</tt> implementation class. / 
# 
# Default Value: 
hibernate.cache.query_cache_factory=

# -----------------------------------------------------------=[ hibernate.cache.use_second_level_cache ]
# Description:
# Enable the second-level cache (enabled by default) / 
# 
# Default Value: true
hibernate.cache.use_second_level_cache=true

# -----------------------------------------------------------------=[ hibernate.cache.use_minimal_puts ]
# Description:
# Optimize the cache for minimal puts instead of minimal gets / 
# 
# Default Value: 
hibernate.cache.use_minimal_puts=

# --------------------------------------------------------------------=[ hibernate.cache.region_prefix ]
# Description:
# The <tt>CacheProvider</tt> region name prefix / 
# 
# Default Value: 
hibernate.cache.region_prefix=

# -----------------------------------------------------------=[ hibernate.cache.use_structured_entries ]
# Description:
# Enable use of structured second-level cache entries / 
# 
# Default Value: 
hibernate.cache.use_structured_entries=

# ------------------------------------------------------=[ hibernate.cache.auto_evict_collection_cache ]
# Description:
# Enables the automatic eviction of a bi-directional ass
# ociation's collection cache when an element in the Man
# yToOne collection is added/updated/removed without pro
# perly managing the change on the OneToMany side. / 
# 
# Default Value: 
hibernate.cache.auto_evict_collection_cache=

# --------------------------------------------------------------------=[ hibernate.generate_statistics ]
# Description:
# Enable statistics collection / 
# 
# Default Value: true
hibernate.generate_statistics=true

# ----------------------------------------------------------------=[ hibernate.use_identifier_rollback ]
# Description:
# 
# 
# Default Value: 
hibernate.use_identifier_rollback=

# ------------------------------------------------------=[ hibernate.bytecode.use_reflection_optimizer ]
# Description:
# Use bytecode libraries optimized property access / 
# 
# Default Value: true
hibernate.bytecode.use_reflection_optimizer=true

# --------------------------------------------------------------------=[ hibernate.query.factory_class ]
# Description:
# The classname of the HQL query parser factory / 
# 
# Default Value: 
hibernate.query.factory_class=

# --------------------------------------------------------------------=[ hibernate.query.substitutions ]
# Description:
# A comma-separated list of token substitutions to use when translatin
# g a Hibernate query to SQL / 
# 
# Default Value: 
hibernate.query.substitutions=

# --------------------------------------------------------------------=[ hibernate.query.startup_check ]
# Description:
# Should named queries be checked during startup (the default is enabl
# ed). <p/> Mainly intended for test environments. / 
# 
# Default Value: 
hibernate.query.startup_check=

# ---------------------------------------------------------------------------=[ hibernate.hbm2ddl.auto ]
# Description:
# Auto export/update schema using hbm2ddl tool. Valid values are <tt>update</
# tt>, <tt>create</tt>, <tt>create-drop</tt> and <tt>validate</tt>. / 
# 
# Default Value: update
hibernate.hbm2ddl.auto=create

# -------------------------------------------------------------------=[ hibernate.hbm2ddl.import_files ]
# Description:
# Comma-separated names of the optional files containing SQL DML stat
# ements executed during the SessionFactory creation. File order matt
# ers, the statements of a give file are executed before the statemen
# ts of the following files. These statements are only executed if th
# e schema is created ie if <tt>hibernate.hbm2ddl.auto</tt> is set to
#  <tt>create</tt> or <tt>create-drop</tt>. The default value is <tt>
# /import.sql</tt> / 
# 
# Default Value: 
hibernate.hbm2ddl.import_files=

# -----------------------------------------------------=[ hibernate.hbm2ddl.import_files_sql_extractor ]
# Description:
# {@link String} reference to {@link org.hibernate.tool
# .hbm2ddl.ImportSqlCommandExtractor} implementation cl
# ass. Referenced implementation is required to provide
#  non-argument constructor. The default value is <tt>o
# rg.hibernate.tool.hbm2ddl.SingleLineSqlCommandExtract
# or</tt>. / 
# 
# Default Value: 
hibernate.hbm2ddl.import_files_sql_extractor=

# -----------------------------------------------------------=[ hibernate.jdbc.sql_exception_converter ]
# Description:
# The {@link org.hibernate.exception.spi.SQLExceptionConverte
# r} to use for converting SQLExceptions to Hibernate's JDBCE
# xception hierarchy. The default is to use the configured {@
# link org.hibernate.dialect.Dialect}'s preferred SQLExceptio
# nConverter. / 
# 
# Default Value: 
hibernate.jdbc.sql_exception_converter=

# ------------------------------------------------------------------=[ hibernate.jdbc.wrap_result_sets ]
# Description:
# Enable wrapping of JDBC result sets in order to speed up column na
# me lookups for broken JDBC drivers / 
# 
# Default Value: 
hibernate.jdbc.wrap_result_sets=

# --------------------------------------------------------------------------=[ hibernate.order_updates ]
# Description:
# Enable ordering of update statements by primary key value / 
# 
# Default Value: 
hibernate.order_updates=

# --------------------------------------------------------------------------=[ hibernate.order_inserts ]
# Description:
# Enable ordering of insert statements for the purpose of more efficient JDB
# C batching. / 
# 
# Default Value: 
hibernate.order_inserts=

# ---------------------------------------------------------=[ hibernate.order_by.default_null_ordering ]
# Description:
# Default precedence of null values in {@code ORDER BY} cla
# use. Supported options: {@code none} (default), {@code fi
# rst}, {@code last}. / 
# 
# Default Value: 
hibernate.order_by.default_null_ordering=

# --------------------------------------------------------------------=[ hibernate.default_entity_mode ]
# Description:
# The EntityMode in which set the Session opened from the SessionFacto
# ry. / 
# 
# Default Value: 
hibernate.default_entity_mode=

# ------------------------------------------------------------=[ hibernate.globally_quoted_identifiers ]
# Description:
# Should all database identifiers be quoted. / 
# 
# Default Value: 
hibernate.globally_quoted_identifiers=

# ----------------------------------------------------------------------=[ hibernate.check_nullability ]
# Description:
# Enable nullability checking. Raises an exception if a property marked 
# as not-null is null. Default to false if Bean Validation is present in
#  the classpath and Hibernate Annotations is used, true otherwise. / 
# 
# Default Value: 
hibernate.check_nullability=

# ----------------------------------------------------------------------=[ hibernate.bytecode.provider ]
# Description:
# 
# 
# Default Value: 
hibernate.bytecode.provider=

# ----------------------------------------------------------=[ hibernate.query.jpaql_strict_compliance ]
# Description:
# 
# 
# Default Value: 
hibernate.query.jpaql_strict_compliance=

# ----------------------------------------------------------=[ hibernate.id.optimizer.pooled.prefer_lo ]
# Description:
# When using pooled {@link org.hibernate.id.enhanced.Optimiz
# er optimizers}, prefer interpreting the database value as 
# the lower (lo) boundary. The default is to interpret it as
#  the high boundary. / 
# 
# Default Value: 
hibernate.id.optimizer.pooled.prefer_lo=

# --------------------------------------------------------------=[ hibernate.query.plan_cache_max_size ]
# Description:
# The maximum number of entries including: <ul> <li>{@link org.h
# ibernate.engine.query.spi.HQLQueryPlan}</li> <li>{@link org.hi
# bernate.engine.query.spi.FilterQueryPlan}</li> <li>{@link org.
# hibernate.engine.query.spi.NativeSQLQueryPlan}</li> </ul> main
# tained by {@link org.hibernate.engine.query.spi.QueryPlanCache
# }. Default is 2048. / 
# 
# Default Value: 
hibernate.query.plan_cache_max_size=

# -------------------------------------------------=[ hibernate.query.plan_parameter_metadata_max_size ]
# Description:
# The maximum number of {@link org.hibernate.engine
# .query.spi.ParameterMetadata} maintained by {@lin
# k org.hibernate.engine.query.spi.QueryPlanCache}.
#  Default is 128. / 
# 
# Default Value: 
hibernate.query.plan_parameter_metadata_max_size=

# -------------------------------------------------------=[ hibernate.jdbc.lob.non_contextual_creation ]
# Description:
# Should we not use contextual LOB creation (aka based on
#  {@link java.sql.Connection#createBlob()} et al). / 
# 
# Default Value: 
hibernate.jdbc.lob.non_contextual_creation=

# ---------------------------------------------------------------------------=[ hibernate.classLoaders ]
# Description:
# Used to define a {@link java.util.Collection} of the {@link ClassLoader} in
# stances Hibernate should use for class-loading and resource-lookups. @since
#  5.0 / 
# 
# Default Value: 
hibernate.classLoaders=

# -----------------------------------------------------------------------------------=[ hibernate.c3p0 ]
# Description:
# 
# 
# Default Value: 
hibernate.c3p0=

# --------------------------------------------------------------------------------=[ hibernate.proxool ]
# Description:
# 
# 
# Default Value: 
hibernate.proxool=

# ----------------------------------------------------------------------------=[ hibernate.jmx.enabled ]
# Description:
# 
# 
# Default Value: 
hibernate.jmx.enabled=

# ------------------------------------------------------------------=[ hibernate.jmx.usePlatformServer ]
# Description:
# 
# 
# Default Value: 
hibernate.jmx.usePlatformServer=

# ----------------------------------------------------------------------------=[ hibernate.jmx.agentId ]
# Description:
# 
# 
# Default Value: 
hibernate.jmx.agentId=

# ----------------------------------------------------------------------=[ hibernate.jmx.defaultDomain ]
# Description:
# 
# 
# Default Value: 
hibernate.jmx.defaultDomain=

# -----------------------------------------------------------------=[ hibernate.jmx.sessionFactoryName ]
# Description:
# 
# 
# Default Value: 
hibernate.jmx.sessionFactoryName=

# -------------------------------------------------------------------------------=[ org.hibernate.core ]
# Description:
# 
# 
# Default Value: 
org.hibernate.core=

# ------------------------------------------------------------=[ hibernate.jta.cacheTransactionManager ]
# Description:
# A configuration value key used to indicate that it is safe t
# o cache {@link javax.transaction.TransactionManager} referen
# ces. @since 4.0 / 
# 
# Default Value: 
hibernate.jta.cacheTransactionManager=

# ---------------------------------------------------------------=[ hibernate.jta.cacheUserTransaction ]
# Description:
# A configuration value key used to indicate that it is safe to c
# ache {@link javax.transaction.UserTransaction} references. @sin
# ce 4.0 / 
# 
# Default Value: 
hibernate.jta.cacheUserTransaction=

# -----------------------------------------------=[ hibernate.cache.default_cache_concurrency_strategy ]
# Description:
# Setting used to give the name of the default {@
# link org.hibernate.annotations.CacheConcurrency
# Strategy} to use when either {@link javax.persi
# stence.Cacheable @Cacheable} or {@link org.hibe
# rnate.annotations.Cache @Cache} is used. {@link
#  org.hibernate.annotations.Cache @Cache(strateg
# y="..")} is used to override. / 
# 
# Default Value: 
hibernate.cache.default_cache_concurrency_strategy=

# --------------------------------------------------------------=[ hibernate.id.new_generator_mappings ]
# Description:
# Setting which indicates whether or not the new {@link org.hibe
# rnate.id.IdentifierGenerator} are used for AUTO, TABLE and SEQ
# UENCE. Default to false to keep backward compatibility. / 
# 
# Default Value: 
hibernate.id.new_generator_mappings=

# --------------------------------------------------------------=[ hibernate.entity_dirtiness_strategy ]
# Description:
# Setting to identify a {@link org.hibernate.CustomEntityDirtine
# ssStrategy} to use. May point to either a class name or instan
# ce. / 
# 
# Default Value: 
hibernate.entity_dirtiness_strategy=

# ---------------------------------------------------------------------------=[ hibernate.multiTenancy ]
# Description:
# Strategy for multi-tenancy. @see org.hibernate.MultiTenancyStrategy @since 
# 4.0 / 
# 
# Default Value: 
hibernate.multiTenancy=

# -------------------------------------------------------=[ hibernate.multi_tenant_connection_provider ]
# Description:
# Names a {@link org.hibernate.engine.jdbc.connections.sp
# i.MultiTenantConnectionProvider} implementation to use.
#  As MultiTenantConnectionProvider is also a service, ca
# n be configured directly through the {@link org.hiberna
# te.boot.registry.StandardServiceRegistryBuilder} @since
#  4.1 / 
# 
# Default Value: 
hibernate.multi_tenant_connection_provider=

# -------------------------------------------------------------=[ hibernate.tenant_identifier_resolver ]
# Description:
# Names a {@link org.hibernate.context.spi.CurrentTenantIdentif
# ierResolver} implementation to use. <p/> Can be<ul> <li>Curre
# ntTenantIdentifierResolver instance</li> <li>CurrentTenantIde
# ntifierResolver implementation {@link Class} reference</li> <
# li>CurrentTenantIdentifierResolver implementation class name<
# /li> </ul> @since 4.1 / 
# 
# Default Value: 
hibernate.tenant_identifier_resolver=

# ----------------------------------------------------------=[ hibernate.discriminator.force_in_select ]
# Description:
# 
# 
# Default Value: 
hibernate.discriminator.force_in_select=

# ------------------------------------------------------=[ hibernate.discriminator.implicit_for_joined ]
# Description:
# The legacy behavior of Hibernate is to not use discrim
# inators for joined inheritance (Hibernate does not nee
# d the discriminator...). However, some JPA providers d
# o need the discriminator for handling joined inheritan
# ce. In the interest of portability this capability has
#  been added to Hibernate too. <p/> However, we want to
#  make sure that legacy applications continue to work a
# s well. Which puts us in a bind in terms of how to han
# dle "implicit" discriminator mappings. The solution is
#  to assume that the absence of discriminator metadata 
# means to follow the legacy behavior unless* this setti
# ng is enabled. With this setting enabled, Hibernate wi
# ll interpret the absence of discriminator metadata as 
# an indication to use the JPA defined defaults for thes
# e absent annotations. <p/> See Hibernate Jira issue HH
# H-6911 for additional background info. @see #IGNORE_EX
# PLICIT_DISCRIMINATOR_COLUMNS_FOR_JOINED_SUBCLASS / 
# 
# Default Value: 
hibernate.discriminator.implicit_for_joined=

# -----------------------------------------------=[ hibernate.discriminator.ignore_explicit_for_joined ]
# Description:
# The legacy behavior of Hibernate is to not use 
# discriminators for joined inheritance (Hibernat
# e does not need the discriminator...). However,
#  some JPA providers do need the discriminator f
# or handling joined inheritance. In the interest
#  of portability this capability has been added 
# to Hibernate too. <p/> Existing applications re
# ly (implicitly or explicitly) on Hibernate igno
# ring any DiscriminatorColumn declarations on jo
# ined inheritance hierarchies. This setting allo
# ws these applications to maintain the legacy be
# havior of DiscriminatorColumn annotations being
#  ignored when paired with joined inheritance. <
# p/> See Hibernate Jira issue HHH-6911 for addit
# ional background info. @see #IMPLICIT_DISCRIMIN
# ATOR_COLUMNS_FOR_JOINED_SUBCLASS / 
# 
# Default Value: 
hibernate.discriminator.ignore_explicit_for_joined=

# --------------------------------------------------------------=[ hibernate.enable_lazy_load_no_trans ]
# Description:
# 
# 
# Default Value: 
hibernate.enable_lazy_load_no_trans=

# -------------------------------------------------------------------=[ hibernate.hql.bulk_id_strategy ]
# Description:
# 
# 
# Default Value: 
hibernate.hql.bulk_id_strategy=

# ----------------------------------------------------------------------=[ hibernate.batch_fetch_style ]
# Description:
# Names the {@link org.hibernate.loader.BatchFetchStyle} to use. Can spe
# cify either the {@link org.hibernate.loader.BatchFetchStyle} name (ins
# ensitively), or a {@link org.hibernate.loader.BatchFetchStyle} instanc
# e. / 
# 
# Default Value: 
hibernate.batch_fetch_style=

# ------------------------------------------------------------=[ hibernate.cache.use_reference_entries ]
# Description:
# Enable direct storage of entity references into the second l
# evel cache when applicable (immutable data, etc). Default is
#  to not store direct references. / 
# 
# Default Value: 
hibernate.cache.use_reference_entries=

# --------------------------------------------------------=[ hibernate.use_nationalized_character_data ]
# Description:
# Enable nationalized character support on all string / cl
# ob based attribute ( string, char, clob, text etc ). Def
# ault is <clode>false</clode>. / 
# 
# Default Value: 
hibernate.use_nationalized_character_data=

# --------------------------------------------------------------------=[ hibernate.jta.track_by_thread ]
# Description:
# A transaction can be rolled back by another thread ("tracking by thr
# ead") -- not the original application. Examples of this include a JT
# A transaction timeout handled by a background reaper thread. The abi
# lity to handle this situation requires checking the Thread ID every 
# time Session is called. This can certainly have performance consider
# ations. Default is <code>true</code> (enabled). / 
# 
# Default Value: 
hibernate.jta.track_by_thread=

# ------------------------------------------------------------------------=[ hibernate.jacc_context_id ]
# Description:
# 
# 
# Default Value: 
hibernate.jacc_context_id=

# -----------------------------------------------------------------------------------=[ hibernate.jacc ]
# Description:
# 
# 
# Default Value: 
hibernate.jacc=

# ---------------------------------------------------------------------------=[ hibernate.jacc.enabled ]
# Description:
# 
# 
# Default Value: 
hibernate.jacc.enabled=

# -------------------------------------------------------------------------------=[ hibernate.synonyms ]
# Description:
# If enabled, allows {@link org.hibernate.tool.hbm2ddl.DatabaseMetadata} to suppo
# rt synonyms during schema update and validations. Due to the possibility that t
# his would return duplicate tables (especially in Oracle), this is disabled by d
# efault. / 
# 
# Default Value: 
hibernate.synonyms=

# -----------------------------------------------=[ hibernate.schema_update.unique_constraint_strategy ]
# Description:
# Unique columns and unique keys both use unique 
# constraints in most dialects. SchemaUpdate need
# s to create these constraints, but DB's support
#  for finding existing constraints is extremely 
# inconsistent. Further, non-explicitly-named uni
# que constraints use randomly generated characte
# rs. Therefore, select from these strategies. {@
# link org.hibernate.tool.hbm2ddl.UniqueConstrain
# tSchemaUpdateStrategy#DROP_RECREATE_QUIETLY} (D
# EFAULT): Attempt to drop, then (re-)create each
#  unique constraint. Ignore any exceptions throw
# n. {@link org.hibernate.tool.hbm2ddl.UniqueCons
# traintSchemaUpdateStrategy#RECREATE_QUIETLY}: a
# ttempt to (re-)create unique constraints, ignor
# ing exceptions thrown if the constraint already
#  existed {@link org.hibernate.tool.hbm2ddl.Uniq
# ueConstraintSchemaUpdateStrategy#SKIP}: do not 
# attempt to create unique constraints on a schem
# a update / 
# 
# Default Value: 
hibernate.schema_update.unique_constraint_strategy=

# ---------------------------------------------------------------------=[ hibernate.session.events.log ]
# Description:
# A setting to control whether to {@link org.hibernate.engine.internal.
# StatisticalLoggingSessionEventListener} is enabled on all Sessions (u
# nless explicitly disabled for a given Session). The default value of 
# this setting is determined by the value for {@link #GENERATE_STATISTI
# CS}, meaning that if collection of statistics is enabled logging of S
# ession metrics is enabled by default too. / 
# 
# Default Value: 
hibernate.session.events.log=

# --------------------------------------------------------------------=[ hibernate.session.events.auto ]
# Description:
# 
# 
# Default Value: 
hibernate.session.events.auto=

# ----------------------------------------------------------=[ hibernate.cache.infinispan.cachemanager ]
# Description:
# No Description available
# 
# Default Value: 
hibernate.cache.infinispan.cachemanager=

# ------------------------------------------------------=[ hibernate.search.default.directory_provider ]
# Description:
# No Description available
# 
# Examples:
# ram
# filesystem
# filesystem-master
# filesystem-slave
# 
# Default Value: filesystem
hibernate.search.default.directory_provider=filesystem

# --------------------------------------------------------=[ hibernate.search.default.locking_strategy ]
# Description:
# Simple: Creates a marker file | Native: Native OS-File L
# ocking | Single: Java Object in memory
# 
# Examples:
# simple
# native
# single
# none
# 
# Default Value: none
hibernate.search.default.locking_strategy=none

# ---------------------------------------------------=[ hibernate.search.default.filesyste_access_type ]
# Description:
# No Description available
# 
# Examples:
# auto
# simple
# nio
# mmap
# 
# Default Value: auto
hibernate.search.default.filesyste_access_type=auto

# ---------------------------------------------------------------=[ hibernate.search.default.indexBase ]
# Description:
# No Description available
# 
# Default Value: indexes
hibernate.search.default.indexBase=indexes

# -----------------------------------------------------=[ hibernate.search.default.exclusive_index_use ]
# Description:
# No Description available
# 
# Examples:
# true
# false
# 
# Default Value: false
hibernate.search.default.exclusive_index_use=false

# ----------------------------------------------------------=[ hibernate.search.autoregister_listeners ]
# Description:
# disable hibernate search
# 
# Examples:
# true
# false
# 
# Default Value: true
hibernate.search.autoregister_listeners=true

# ---------------------------------------------------------------------------=[ chrl.orm.flyway.active ]
# Description:
# Defines if Flyway is active or not
# 
# Default Value: true
chrl.orm.flyway.active=true

